{"file":"index.mjs","mappings":";AACA,MAAe,gBAAA,qBAAqB,MAAM,OAAO,cAAyF,EAAE,KAAK,OAAK,EAAE,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;","names":[],"sources":["../../../../../../../node_modules/@primevue/forms/formfield/index.mjs?nuxt_component=async&nuxt_component_name=FormField&nuxt_component_export=default"],"sourcesContent":["import BaseComponent from '@primevue/core/basecomponent';\nimport FormFieldStyle from '@primevue/forms/formfield/style';\nimport { createBlock, renderSlot, openBlock, resolveDynamicComponent, mergeProps, withCtx } from 'vue';\n\nvar script$1 = {\n  name: 'BaseFormField',\n  \"extends\": BaseComponent,\n  style: FormFieldStyle,\n  props: {\n    name: {\n      type: String,\n      \"default\": undefined\n    },\n    resolver: {\n      type: Function,\n      \"default\": undefined\n    },\n    initialValue: {\n      type: null,\n      \"default\": undefined\n    },\n    validateOnValueUpdate: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    validateOnBlur: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    validateOnMount: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    validateOnSubmit: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    as: {\n      type: [String, Object],\n      \"default\": 'DIV'\n    },\n    asChild: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  provide: function provide() {\n    return {\n      $pcFormField: this,\n      $parentInstance: this\n    };\n  }\n};\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), true).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar script = {\n  name: 'FormField',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  inject: {\n    $pcForm: {\n      \"default\": undefined\n    }\n  },\n  watch: {\n    formControl: {\n      immediate: true,\n      handler: function handler(newValue) {\n        var _this$$pcForm, _this$$pcForm$registe;\n        (_this$$pcForm = this.$pcForm) === null || _this$$pcForm === void 0 || (_this$$pcForm$registe = _this$$pcForm.register) === null || _this$$pcForm$registe === void 0 || _this$$pcForm$registe.call(_this$$pcForm, this.name, newValue);\n      }\n    }\n  },\n  computed: {\n    formControl: function formControl() {\n      return {\n        name: this.name,\n        resolver: this.resolver,\n        initialValue: this.initialValue,\n        validateOnValueUpdate: this.validateOnValueUpdate,\n        validateOnBlur: this.validateOnBlur,\n        validateOnMount: this.validateOnMount,\n        validateOnSubmit: this.validateOnSubmit\n      };\n    },\n    field: function field() {\n      var _this$$pcForm2;\n      return ((_this$$pcForm2 = this.$pcForm) === null || _this$$pcForm2 === void 0 || (_this$$pcForm2 = _this$$pcForm2.fields) === null || _this$$pcForm2 === void 0 ? void 0 : _this$$pcForm2[this.name]) || {};\n    },\n    fieldAttrs: function fieldAttrs() {\n      return _objectSpread(_objectSpread({}, this.field.props), this.field.states);\n    }\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return !_ctx.asChild ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), {\n    \"default\": withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\", mergeProps({\n        props: $options.field.props\n      }, $options.fieldAttrs))];\n    }),\n    _: 3\n  }, 16, [\"class\"])) : renderSlot(_ctx.$slots, \"default\", mergeProps({\n    key: 1,\n    \"class\": _ctx.cx('root'),\n    props: $options.field.props\n  }, $options.fieldAttrs));\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"version":3}