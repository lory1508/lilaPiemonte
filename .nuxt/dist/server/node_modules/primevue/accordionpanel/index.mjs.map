{"version":3,"file":"index.mjs","sources":["../../../../../../node_modules/primevue/accordionpanel/index.mjs?nuxt_component=async&nuxt_component_name=AccordionPanel&nuxt_component_export=default"],"sourcesContent":["import { mergeProps, createBlock, renderSlot, openBlock, resolveDynamicComponent, withCtx, normalizeClass } from 'vue';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AccordionPanelStyle from 'primevue/accordionpanel/style';\n\nvar script$1 = {\n  name: 'BaseAccordionPanel',\n  \"extends\": BaseComponent,\n  props: {\n    value: {\n      type: [String, Number],\n      \"default\": undefined\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    as: {\n      type: [String, Object],\n      \"default\": 'DIV'\n    },\n    asChild: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: AccordionPanelStyle,\n  provide: function provide() {\n    return {\n      $pcAccordionPanel: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'AccordionPanel',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  inject: ['$pcAccordion'],\n  computed: {\n    active: function active() {\n      return this.$pcAccordion.isItemActive(this.value);\n    },\n    attrs: function attrs() {\n      return mergeProps(this.a11yAttrs, this.ptmi('root', this.ptParams));\n    },\n    a11yAttrs: function a11yAttrs() {\n      return {\n        'data-pc-name': 'accordionpanel',\n        'data-p-disabled': this.disabled,\n        'data-p-active': this.active\n      };\n    },\n    ptParams: function ptParams() {\n      return {\n        context: {\n          active: this.active\n        }\n      };\n    }\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return !_ctx.asChild ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('root')\n  }, $options.attrs), {\n    \"default\": withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n  }, 16, [\"class\"])) : renderSlot(_ctx.$slots, \"default\", {\n    key: 1,\n    \"class\": normalizeClass(_ctx.cx('root')),\n    active: $options.active,\n    a11yAttrs: $options.a11yAttrs\n  });\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"names":[],"mappings":";AACA,MAAe,qBAAA,qBAAqB,MAAM,OAAO,cAAuF,EAAE,KAAK,OAAK,EAAE,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;","x_google_ignoreList":[0]}