{"version":3,"file":"index.mjs","sources":["../../../../../../node_modules/primevue/step/index.mjs?nuxt_component=async&nuxt_component_name=Step&nuxt_component_export=default"],"sourcesContent":["import { cn } from '@primeuix/utils';\nimport { find, findSingle } from '@primeuix/utils/dom';\nimport { findIndexInList } from '@primeuix/utils/object';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { createElementBlock, openBlock, mergeProps, resolveComponent, createBlock, renderSlot, resolveDynamicComponent, withCtx, createElementVNode, createCommentVNode, toDisplayString, normalizeClass } from 'vue';\nimport StepStyle from 'primevue/step/style';\n\nvar script$2 = {\n  name: 'StepperSeparator',\n  hostName: 'Stepper',\n  \"extends\": BaseComponent,\n  inject: {\n    $pcStepper: {\n      \"default\": null\n    }\n  }\n};\n\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"span\", mergeProps({\n    \"class\": _ctx.cx('separator')\n  }, _ctx.ptmo($options.$pcStepper.pt, 'separator')), null, 16);\n}\n\nscript$2.render = render$1;\n\nvar script$1 = {\n  name: 'BaseStep',\n  \"extends\": BaseComponent,\n  props: {\n    value: {\n      type: [String, Number],\n      \"default\": undefined\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    asChild: {\n      type: Boolean,\n      \"default\": false\n    },\n    as: {\n      type: [String, Object],\n      \"default\": 'DIV'\n    }\n  },\n  style: StepStyle,\n  provide: function provide() {\n    return {\n      $pcStep: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Step',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  inject: {\n    $pcStepper: {\n      \"default\": null\n    },\n    $pcStepList: {\n      \"default\": null\n    },\n    $pcStepItem: {\n      \"default\": null\n    }\n  },\n  data: function data() {\n    return {\n      isSeparatorVisible: false,\n      isCompleted: false\n    };\n  },\n  mounted: function mounted() {\n    if (this.$el && this.$pcStepList) {\n      var index = findIndexInList(this.$el, find(this.$pcStepper.$el, '[data-pc-name=\"step\"]'));\n      var activeIndex = findIndexInList(findSingle(this.$pcStepper.$el, '[data-pc-name=\"step\"][data-p-active=\"true\"]'), find(this.$pcStepper.$el, '[data-pc-name=\"step\"]'));\n      var stepLen = find(this.$pcStepper.$el, '[data-pc-name=\"step\"]').length;\n      this.isSeparatorVisible = index !== stepLen - 1;\n      this.isCompleted = index < activeIndex;\n    }\n  },\n  updated: function updated() {\n    var index = findIndexInList(this.$el, find(this.$pcStepper.$el, '[data-pc-name=\"step\"]'));\n    var activeIndex = findIndexInList(findSingle(this.$pcStepper.$el, '[data-pc-name=\"step\"][data-p-active=\"true\"]'), find(this.$pcStepper.$el, '[data-pc-name=\"step\"]'));\n    this.isCompleted = index < activeIndex;\n  },\n  methods: {\n    getPTOptions: function getPTOptions(key) {\n      var _ptm = key === 'root' ? this.ptmi : this.ptm;\n      return _ptm(key, {\n        context: {\n          active: this.active,\n          disabled: this.isStepDisabled\n        }\n      });\n    },\n    onStepClick: function onStepClick() {\n      this.$pcStepper.updateValue(this.activeValue);\n    }\n  },\n  computed: {\n    active: function active() {\n      return this.$pcStepper.isStepActive(this.activeValue);\n    },\n    activeValue: function activeValue() {\n      var _this$$pcStepItem;\n      return !!this.$pcStepItem ? (_this$$pcStepItem = this.$pcStepItem) === null || _this$$pcStepItem === void 0 ? void 0 : _this$$pcStepItem.value : this.value;\n    },\n    isStepDisabled: function isStepDisabled() {\n      return !this.active && (this.$pcStepper.isStepDisabled() || this.disabled);\n    },\n    id: function id() {\n      var _this$$pcStepper;\n      return \"\".concat((_this$$pcStepper = this.$pcStepper) === null || _this$$pcStepper === void 0 ? void 0 : _this$$pcStepper.id, \"_step_\").concat(this.activeValue);\n    },\n    ariaControls: function ariaControls() {\n      var _this$$pcStepper2;\n      return \"\".concat((_this$$pcStepper2 = this.$pcStepper) === null || _this$$pcStepper2 === void 0 ? void 0 : _this$$pcStepper2.id, \"_steppanel_\").concat(this.activeValue);\n    },\n    a11yAttrs: function a11yAttrs() {\n      return {\n        root: {\n          role: 'presentation',\n          'aria-current': this.active ? 'step' : undefined,\n          'data-pc-name': 'step',\n          'data-pc-section': 'root',\n          'data-p-disabled': this.isStepDisabled,\n          'data-p-active': this.active\n        },\n        header: {\n          id: this.id,\n          role: 'tab',\n          taindex: this.disabled ? -1 : undefined,\n          'aria-controls': this.ariaControls,\n          'data-pc-section': 'header',\n          disabled: this.isStepDisabled,\n          onClick: this.onStepClick\n        }\n      };\n    },\n    dataP: function dataP() {\n      return cn({\n        disabled: this.isStepDisabled,\n        readonly: this.$pcStepper.linear,\n        active: this.active,\n        completed: this.isCompleted,\n        vertical: this.$pcStepItem != null\n      });\n    }\n  },\n  components: {\n    StepperSeparator: script$2\n  }\n};\n\nvar _hoisted_1 = [\"id\", \"tabindex\", \"aria-controls\", \"disabled\", \"data-p\"];\nvar _hoisted_2 = [\"data-p\"];\nvar _hoisted_3 = [\"data-p\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_StepperSeparator = resolveComponent(\"StepperSeparator\");\n  return !_ctx.asChild ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('root'),\n    \"aria-current\": $options.active ? 'step' : undefined,\n    role: \"presentation\",\n    \"data-p-active\": $options.active,\n    \"data-p-disabled\": $options.isStepDisabled,\n    \"data-p\": $options.dataP\n  }, $options.getPTOptions('root')), {\n    \"default\": withCtx(function () {\n      return [createElementVNode(\"button\", mergeProps({\n        id: $options.id,\n        \"class\": _ctx.cx('header'),\n        role: \"tab\",\n        type: \"button\",\n        tabindex: $options.isStepDisabled ? -1 : undefined,\n        \"aria-controls\": $options.ariaControls,\n        disabled: $options.isStepDisabled,\n        onClick: _cache[0] || (_cache[0] = function () {\n          return $options.onStepClick && $options.onStepClick.apply($options, arguments);\n        }),\n        \"data-p\": $options.dataP\n      }, $options.getPTOptions('header')), [createElementVNode(\"span\", mergeProps({\n        \"class\": _ctx.cx('number'),\n        \"data-p\": $options.dataP\n      }, $options.getPTOptions('number')), toDisplayString($options.activeValue), 17, _hoisted_2), createElementVNode(\"span\", mergeProps({\n        \"class\": _ctx.cx('title'),\n        \"data-p\": $options.dataP\n      }, $options.getPTOptions('title')), [renderSlot(_ctx.$slots, \"default\")], 16, _hoisted_3)], 16, _hoisted_1), $data.isSeparatorVisible ? (openBlock(), createBlock(_component_StepperSeparator, {\n        key: 0,\n        \"data-p\": $options.dataP\n      }, null, 8, [\"data-p\"])) : createCommentVNode(\"\", true)];\n    }),\n    _: 3\n  }, 16, [\"class\", \"aria-current\", \"data-p-active\", \"data-p-disabled\", \"data-p\"])) : renderSlot(_ctx.$slots, \"default\", {\n    key: 1,\n    \"class\": normalizeClass(_ctx.cx('root')),\n    active: $options.active,\n    value: _ctx.value,\n    a11yAttrs: $options.a11yAttrs,\n    activateCallback: $options.onStepClick\n  });\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"names":[],"mappings":";AACA,MAAe,WAAA,qBAAqB,MAAM,OAAO,cAA6E,EAAE,KAAK,OAAK,EAAE,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;","x_google_ignoreList":[0]}