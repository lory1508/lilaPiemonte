{"version":3,"file":"index.mjs","sources":["../../../../../../node_modules/primevue/accordioncontent/index.mjs?nuxt_component=async&nuxt_component_name=AccordionContent&nuxt_component_export=default"],"sourcesContent":["import { mergeProps, createBlock, renderSlot, openBlock, Transition, withCtx, withDirectives, createCommentVNode, resolveDynamicComponent, createElementVNode, vShow, normalizeClass } from 'vue';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AccordionContentStyle from 'primevue/accordioncontent/style';\n\nvar script$1 = {\n  name: 'BaseAccordionContent',\n  \"extends\": BaseComponent,\n  props: {\n    as: {\n      type: [String, Object],\n      \"default\": 'DIV'\n    },\n    asChild: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: AccordionContentStyle,\n  provide: function provide() {\n    return {\n      $pcAccordionContent: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'AccordionContent',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  inject: ['$pcAccordion', '$pcAccordionPanel'],\n  computed: {\n    id: function id() {\n      return \"\".concat(this.$pcAccordion.id, \"_accordioncontent_\").concat(this.$pcAccordionPanel.value);\n    },\n    ariaLabelledby: function ariaLabelledby() {\n      return \"\".concat(this.$pcAccordion.id, \"_accordionheader_\").concat(this.$pcAccordionPanel.value);\n    },\n    attrs: function attrs() {\n      return mergeProps(this.a11yAttrs, this.ptmi('root', this.ptParams));\n    },\n    a11yAttrs: function a11yAttrs() {\n      return {\n        id: this.id,\n        role: 'region',\n        'aria-labelledby': this.ariaLabelledby,\n        'data-pc-name': 'accordioncontent',\n        'data-p-active': this.$pcAccordionPanel.active\n      };\n    },\n    ptParams: function ptParams() {\n      return {\n        context: {\n          active: this.$pcAccordionPanel.active\n        }\n      };\n    }\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return !_ctx.asChild ? (openBlock(), createBlock(Transition, mergeProps({\n    key: 0,\n    name: \"p-toggleable-content\"\n  }, _ctx.ptm('transition', $options.ptParams)), {\n    \"default\": withCtx(function () {\n      return [($options.$pcAccordion.lazy ? $options.$pcAccordionPanel.active : true) ? withDirectives((openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({\n        key: 0,\n        \"class\": _ctx.cx('root')\n      }, $options.attrs), {\n        \"default\": withCtx(function () {\n          return [createElementVNode(\"div\", mergeProps({\n            \"class\": _ctx.cx('content')\n          }, _ctx.ptm('content', $options.ptParams)), [renderSlot(_ctx.$slots, \"default\")], 16)];\n        }),\n        _: 3\n      }, 16, [\"class\"])), [[vShow, $options.$pcAccordion.lazy ? true : $options.$pcAccordionPanel.active]]) : createCommentVNode(\"\", true)];\n    }),\n    _: 3\n  }, 16)) : renderSlot(_ctx.$slots, \"default\", {\n    key: 1,\n    \"class\": normalizeClass(_ctx.cx('root')),\n    active: $options.$pcAccordionPanel.active,\n    a11yAttrs: $options.a11yAttrs\n  });\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"names":[],"mappings":";AACA,MAAe,uBAAA,qBAAqB,MAAM,OAAO,cAAyF,EAAE,KAAK,OAAK,EAAE,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;","x_google_ignoreList":[0]}