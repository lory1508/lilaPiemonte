{"file":"index.mjs","mappings":";AACA,MAAe,aAAA,qBAAqB,MAAM,OAAO,cAA+E,EAAE,KAAK,OAAK,EAAE,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;","names":[],"sources":["../../../../../../node_modules/primevue/button/index.mjs?nuxt_component=async&nuxt_component_name=Button&nuxt_component_export=default"],"sourcesContent":["import { cn } from '@primeuix/utils';\nimport { isEmpty } from '@primeuix/utils/object';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport Badge from 'primevue/badge';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps, resolveComponent, resolveDirective, withDirectives, renderSlot, createBlock, openBlock, resolveDynamicComponent, withCtx, createElementVNode, createCommentVNode, createElementBlock, toDisplayString, normalizeClass } from 'vue';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ButtonStyle from 'primevue/button/style';\n\nvar script$1 = {\n  name: 'BaseButton',\n  \"extends\": BaseComponent,\n  props: {\n    label: {\n      type: String,\n      \"default\": null\n    },\n    icon: {\n      type: String,\n      \"default\": null\n    },\n    iconPos: {\n      type: String,\n      \"default\": 'left'\n    },\n    iconClass: {\n      type: [String, Object],\n      \"default\": null\n    },\n    badge: {\n      type: String,\n      \"default\": null\n    },\n    badgeClass: {\n      type: [String, Object],\n      \"default\": null\n    },\n    badgeSeverity: {\n      type: String,\n      \"default\": 'secondary'\n    },\n    loading: {\n      type: Boolean,\n      \"default\": false\n    },\n    loadingIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    as: {\n      type: [String, Object],\n      \"default\": 'BUTTON'\n    },\n    asChild: {\n      type: Boolean,\n      \"default\": false\n    },\n    link: {\n      type: Boolean,\n      \"default\": false\n    },\n    severity: {\n      type: String,\n      \"default\": null\n    },\n    raised: {\n      type: Boolean,\n      \"default\": false\n    },\n    rounded: {\n      type: Boolean,\n      \"default\": false\n    },\n    text: {\n      type: Boolean,\n      \"default\": false\n    },\n    outlined: {\n      type: Boolean,\n      \"default\": false\n    },\n    size: {\n      type: String,\n      \"default\": null\n    },\n    variant: {\n      type: String,\n      \"default\": null\n    },\n    plain: {\n      type: Boolean,\n      \"default\": false\n    },\n    fluid: {\n      type: Boolean,\n      \"default\": null\n    }\n  },\n  style: ButtonStyle,\n  provide: function provide() {\n    return {\n      $pcButton: this,\n      $parentInstance: this\n    };\n  }\n};\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar script = {\n  name: 'Button',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  inject: {\n    $pcFluid: {\n      \"default\": null\n    }\n  },\n  methods: {\n    getPTOptions: function getPTOptions(key) {\n      var _ptm = key === 'root' ? this.ptmi : this.ptm;\n      return _ptm(key, {\n        context: {\n          disabled: this.disabled\n        }\n      });\n    }\n  },\n  computed: {\n    disabled: function disabled() {\n      return this.$attrs.disabled || this.$attrs.disabled === '' || this.loading;\n    },\n    defaultAriaLabel: function defaultAriaLabel() {\n      return this.label ? this.label + (this.badge ? ' ' + this.badge : '') : this.$attrs.ariaLabel;\n    },\n    hasIcon: function hasIcon() {\n      return this.icon || this.$slots.icon;\n    },\n    attrs: function attrs() {\n      return mergeProps(this.asAttrs, this.a11yAttrs, this.getPTOptions('root'));\n    },\n    asAttrs: function asAttrs() {\n      return this.as === 'BUTTON' ? {\n        type: 'button',\n        disabled: this.disabled\n      } : undefined;\n    },\n    a11yAttrs: function a11yAttrs() {\n      return {\n        'aria-label': this.defaultAriaLabel,\n        'data-pc-name': 'button',\n        'data-p-disabled': this.disabled,\n        'data-p-severity': this.severity\n      };\n    },\n    hasFluid: function hasFluid() {\n      return isEmpty(this.fluid) ? !!this.$pcFluid : this.fluid;\n    },\n    dataP: function dataP() {\n      return cn(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, this.size, this.size), 'icon-only', this.hasIcon && !this.label && !this.badge), \"loading\", this.loading), \"fluid\", this.hasFluid), \"rounded\", this.rounded), \"raised\", this.raised), \"outlined\", this.outlined || this.variant === 'outlined'), \"text\", this.text || this.variant === 'text'), \"link\", this.link || this.variant === 'link'), \"vertical\", (this.iconPos === 'top' || this.iconPos === 'bottom') && this.label));\n    },\n    dataIconP: function dataIconP() {\n      return cn(_defineProperty(_defineProperty({}, this.iconPos, this.iconPos), this.size, this.size));\n    },\n    dataLabelP: function dataLabelP() {\n      return cn(_defineProperty(_defineProperty({}, this.size, this.size), 'icon-only', this.hasIcon && !this.label && !this.badge));\n    }\n  },\n  components: {\n    SpinnerIcon: SpinnerIcon,\n    Badge: Badge\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\n\nvar _hoisted_1 = [\"data-p\"];\nvar _hoisted_2 = [\"data-p\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SpinnerIcon = resolveComponent(\"SpinnerIcon\");\n  var _component_Badge = resolveComponent(\"Badge\");\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return !_ctx.asChild ? withDirectives((openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('root'),\n    \"data-p\": $options.dataP\n  }, $options.attrs), {\n    \"default\": withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\", {}, function () {\n        return [_ctx.loading ? renderSlot(_ctx.$slots, \"loadingicon\", mergeProps({\n          key: 0,\n          \"class\": [_ctx.cx('loadingIcon'), _ctx.cx('icon')]\n        }, _ctx.ptm('loadingIcon')), function () {\n          return [_ctx.loadingIcon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n            key: 0,\n            \"class\": [_ctx.cx('loadingIcon'), _ctx.cx('icon'), _ctx.loadingIcon]\n          }, _ctx.ptm('loadingIcon')), null, 16)) : (openBlock(), createBlock(_component_SpinnerIcon, mergeProps({\n            key: 1,\n            \"class\": [_ctx.cx('loadingIcon'), _ctx.cx('icon')],\n            spin: \"\"\n          }, _ctx.ptm('loadingIcon')), null, 16, [\"class\"]))];\n        }) : renderSlot(_ctx.$slots, \"icon\", mergeProps({\n          key: 1,\n          \"class\": [_ctx.cx('icon')]\n        }, _ctx.ptm('icon')), function () {\n          return [_ctx.icon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n            key: 0,\n            \"class\": [_ctx.cx('icon'), _ctx.icon, _ctx.iconClass],\n            \"data-p\": $options.dataIconP\n          }, _ctx.ptm('icon')), null, 16, _hoisted_1)) : createCommentVNode(\"\", true)];\n        }), createElementVNode(\"span\", mergeProps({\n          \"class\": _ctx.cx('label')\n        }, _ctx.ptm('label'), {\n          \"data-p\": $options.dataLabelP\n        }), toDisplayString(_ctx.label || 'Â '), 17, _hoisted_2), _ctx.badge ? (openBlock(), createBlock(_component_Badge, {\n          key: 2,\n          value: _ctx.badge,\n          \"class\": normalizeClass(_ctx.badgeClass),\n          severity: _ctx.badgeSeverity,\n          unstyled: _ctx.unstyled,\n          pt: _ctx.ptm('pcBadge')\n        }, null, 8, [\"value\", \"class\", \"severity\", \"unstyled\", \"pt\"])) : createCommentVNode(\"\", true)];\n      })];\n    }),\n    _: 3\n  }, 16, [\"class\", \"data-p\"])), [[_directive_ripple]]) : renderSlot(_ctx.$slots, \"default\", {\n    key: 1,\n    \"class\": normalizeClass(_ctx.cx('root')),\n    a11yAttrs: $options.a11yAttrs\n  });\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"version":3}