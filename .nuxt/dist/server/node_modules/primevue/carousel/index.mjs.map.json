{"file":"index.mjs","mappings":";AACA,0CAAuC,MAAA,OAAA,cAAA,EAAA,KAAA,OAAA,EAAA,SAAA,KAAA,EAAA,WAAA,CAAA,CAAA;","names":[],"sources":["../../../../../../node_modules/primevue/carousel/index.mjs?nuxt_component=async&nuxt_component_name=Carousel&nuxt_component_export=default"],"sourcesContent":["import { setAttribute, find, findSingle, getAttribute, addClass, removeClass } from '@primeuix/utils/dom';\nimport { localeComparator, sort } from '@primeuix/utils/object';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport ChevronLeftIcon from '@primevue/icons/chevronleft';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport Button from 'primevue/button';\nimport Ripple from 'primevue/ripple';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport CarouselStyle from 'primevue/carousel/style';\nimport { resolveComponent, createElementBlock, openBlock, mergeProps, createCommentVNode, renderSlot, createElementVNode, createBlock, withCtx, resolveDynamicComponent, Fragment, renderList, createTextVNode, toDisplayString } from 'vue';\n\nvar script$1 = {\n  name: 'BaseCarousel',\n  \"extends\": BaseComponent,\n  props: {\n    value: null,\n    page: {\n      type: Number,\n      \"default\": 0\n    },\n    numVisible: {\n      type: Number,\n      \"default\": 1\n    },\n    numScroll: {\n      type: Number,\n      \"default\": 1\n    },\n    responsiveOptions: Array,\n    orientation: {\n      type: String,\n      \"default\": 'horizontal'\n    },\n    verticalViewPortHeight: {\n      type: String,\n      \"default\": '300px'\n    },\n    contentClass: String,\n    containerClass: String,\n    indicatorsContentClass: String,\n    circular: {\n      type: Boolean,\n      \"default\": false\n    },\n    autoplayInterval: {\n      type: Number,\n      \"default\": 0\n    },\n    showNavigators: {\n      type: Boolean,\n      \"default\": true\n    },\n    showIndicators: {\n      type: Boolean,\n      \"default\": true\n    },\n    prevButtonProps: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          severity: 'secondary',\n          text: true,\n          rounded: true\n        };\n      }\n    },\n    nextButtonProps: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          severity: 'secondary',\n          text: true,\n          rounded: true\n        };\n      }\n    }\n  },\n  style: CarouselStyle,\n  provide: function provide() {\n    return {\n      $pcCarousel: this,\n      $parentInstance: this\n    };\n  }\n};\n\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nvar script = {\n  name: 'Carousel',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:page'],\n  isRemainingItemsAdded: false,\n  data: function data() {\n    return {\n      remainingItems: 0,\n      d_numVisible: this.numVisible,\n      d_numScroll: this.numScroll,\n      d_oldNumScroll: 0,\n      d_oldNumVisible: 0,\n      d_oldValue: null,\n      d_page: this.page,\n      totalShiftedItems: this.page * this.numScroll * -1,\n      allowAutoplay: !!this.autoplayInterval,\n      d_circular: this.circular || this.allowAutoplay,\n      swipeThreshold: 20\n    };\n  },\n  watch: {\n    page: function page(newValue) {\n      if (newValue > this.d_page) {\n        this.navForward({}, newValue);\n      } else if (newValue < this.d_page) {\n        this.navBackward({}, newValue);\n      }\n      this.d_page = newValue;\n    },\n    circular: function circular(newValue) {\n      this.d_circular = newValue;\n    },\n    numVisible: function numVisible(newValue, oldValue) {\n      this.d_numVisible = newValue;\n      this.d_oldNumVisible = oldValue;\n    },\n    numScroll: function numScroll(newValue, oldValue) {\n      this.d_oldNumScroll = oldValue;\n      this.d_numScroll = newValue;\n    },\n    value: function value(oldValue) {\n      this.d_oldValue = oldValue;\n    }\n  },\n  mounted: function mounted() {\n    var stateChanged = false;\n    this.createStyle();\n    this.calculatePosition();\n    if (this.responsiveOptions) {\n      this.bindDocumentListeners();\n    }\n    if (this.isCircular()) {\n      var totalShiftedItems = this.totalShiftedItems;\n      if (this.d_page === 0) {\n        totalShiftedItems = -1 * this.d_numVisible;\n      } else if (totalShiftedItems === 0) {\n        totalShiftedItems = -1 * this.value.length;\n        if (this.remainingItems > 0) {\n          this.isRemainingItemsAdded = true;\n        }\n      }\n      if (totalShiftedItems !== this.totalShiftedItems) {\n        this.totalShiftedItems = totalShiftedItems;\n        stateChanged = true;\n      }\n    }\n    if (!stateChanged && this.isAutoplay()) {\n      this.startAutoplay();\n    }\n  },\n  updated: function updated() {\n    if (!this.empty) {\n      var isCircular = this.isCircular();\n      var stateChanged = false;\n      var totalShiftedItems = this.totalShiftedItems;\n      if (this.autoplayInterval) {\n        this.stopAutoplay();\n      }\n      if (this.d_oldNumScroll !== this.d_numScroll || this.d_oldNumVisible !== this.d_numVisible || this.d_oldValue.length !== this.value.length) {\n        this.remainingItems = (this.value.length - this.d_numVisible) % this.d_numScroll;\n        var page = this.d_page;\n        if (this.totalIndicators !== 0 && page >= this.totalIndicators) {\n          page = this.totalIndicators - 1;\n          this.$emit('update:page', page);\n          this.d_page = page;\n          stateChanged = true;\n        }\n        totalShiftedItems = page * this.d_numScroll * -1;\n        if (isCircular) {\n          totalShiftedItems -= this.d_numVisible;\n        }\n        if (page === this.totalIndicators - 1 && this.remainingItems > 0) {\n          totalShiftedItems += -1 * this.remainingItems + this.d_numScroll;\n          this.isRemainingItemsAdded = true;\n        } else {\n          this.isRemainingItemsAdded = false;\n        }\n        if (totalShiftedItems !== this.totalShiftedItems) {\n          this.totalShiftedItems = totalShiftedItems;\n          stateChanged = true;\n        }\n        this.d_oldNumScroll = this.d_numScroll;\n        this.d_oldNumVisible = this.d_numVisible;\n        this.d_oldValue = this.value;\n        this.$refs.itemsContainer.style.transform = this.isVertical() ? \"translate3d(0, \".concat(totalShiftedItems * (100 / this.d_numVisible), \"%, 0)\") : \"translate3d(\".concat(totalShiftedItems * (100 / this.d_numVisible), \"%, 0, 0)\");\n      }\n      if (isCircular) {\n        if (this.d_page === 0) {\n          totalShiftedItems = -1 * this.d_numVisible;\n        } else if (totalShiftedItems === 0) {\n          totalShiftedItems = -1 * this.value.length;\n          if (this.remainingItems > 0) {\n            this.isRemainingItemsAdded = true;\n          }\n        }\n        if (totalShiftedItems !== this.totalShiftedItems) {\n          this.totalShiftedItems = totalShiftedItems;\n          stateChanged = true;\n        }\n      }\n      if (!stateChanged && this.isAutoplay()) {\n        this.startAutoplay();\n      }\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.responsiveOptions) {\n      this.unbindDocumentListeners();\n    }\n    if (this.autoplayInterval) {\n      this.stopAutoplay();\n    }\n  },\n  methods: {\n    getIndicatorPTOptions: function getIndicatorPTOptions(key, index) {\n      return this.ptm(key, {\n        context: {\n          highlighted: index === this.d_page\n        }\n      });\n    },\n    getItemPTOptions: function getItemPTOptions(key, index) {\n      return this.ptm(key, {\n        context: {\n          index: index,\n          active: this.firstIndex() <= index && this.lastIndex() >= index,\n          start: this.firstIndex() === index,\n          end: this.lastIndex() === index\n        }\n      });\n    },\n    step: function step(dir, page) {\n      var totalShiftedItems = this.totalShiftedItems;\n      var isCircular = this.isCircular();\n      if (page != null) {\n        totalShiftedItems = this.d_numScroll * page * -1;\n        if (isCircular) {\n          totalShiftedItems -= this.d_numVisible;\n        }\n        this.isRemainingItemsAdded = false;\n      } else {\n        totalShiftedItems += this.d_numScroll * dir;\n        if (this.isRemainingItemsAdded) {\n          totalShiftedItems += this.remainingItems - this.d_numScroll * dir;\n          this.isRemainingItemsAdded = false;\n        }\n        var originalShiftedItems = isCircular ? totalShiftedItems + this.d_numVisible : totalShiftedItems;\n        page = Math.abs(Math.floor(originalShiftedItems / this.d_numScroll));\n      }\n      if (isCircular && this.d_page === this.totalIndicators - 1 && dir === -1) {\n        totalShiftedItems = -1 * (this.value.length + this.d_numVisible);\n        page = 0;\n      } else if (isCircular && this.d_page === 0 && dir === 1) {\n        totalShiftedItems = 0;\n        page = this.totalIndicators - 1;\n      } else if (page === this.totalIndicators - 1 && this.remainingItems > 0) {\n        totalShiftedItems += this.remainingItems * -1 - this.d_numScroll * dir;\n        this.isRemainingItemsAdded = true;\n      }\n      if (this.$refs.itemsContainer) {\n        !this.isUnstyled && removeClass(this.$refs.itemsContainer, 'p-items-hidden');\n        this.$refs.itemsContainer.style.transform = this.isVertical() ? \"translate3d(0, \".concat(totalShiftedItems * (100 / this.d_numVisible), \"%, 0)\") : \"translate3d(\".concat(totalShiftedItems * (100 / this.d_numVisible), \"%, 0, 0)\");\n        this.$refs.itemsContainer.style.transition = 'transform 500ms ease 0s';\n      }\n      this.totalShiftedItems = totalShiftedItems;\n      this.$emit('update:page', page);\n      this.d_page = page;\n    },\n    calculatePosition: function calculatePosition() {\n      if (this.$refs.itemsContainer && this.responsiveOptions) {\n        var windowWidth = window.innerWidth;\n        var matchedResponsiveOptionsData = {\n          numVisible: this.numVisible,\n          numScroll: this.numScroll\n        };\n        for (var i = 0; i < this.responsiveOptions.length; i++) {\n          var res = this.responsiveOptions[i];\n          if (parseInt(res.breakpoint, 10) >= windowWidth) {\n            matchedResponsiveOptionsData = res;\n          }\n        }\n        if (this.d_numScroll !== matchedResponsiveOptionsData.numScroll) {\n          var page = this.d_page;\n          page = parseInt(page * this.d_numScroll / matchedResponsiveOptionsData.numScroll);\n          this.totalShiftedItems = matchedResponsiveOptionsData.numScroll * page * -1;\n          if (this.isCircular()) {\n            this.totalShiftedItems -= matchedResponsiveOptionsData.numVisible;\n          }\n          this.d_numScroll = matchedResponsiveOptionsData.numScroll;\n          this.$emit('update:page', page);\n          this.d_page = page;\n        }\n        if (this.d_numVisible !== matchedResponsiveOptionsData.numVisible) {\n          this.d_numVisible = matchedResponsiveOptionsData.numVisible;\n        }\n      }\n    },\n    navBackward: function navBackward(e, index) {\n      if (this.d_circular || this.d_page !== 0) {\n        this.step(1, index);\n      }\n      this.allowAutoplay = false;\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    },\n    navForward: function navForward(e, index) {\n      if (this.d_circular || this.d_page < this.totalIndicators - 1) {\n        this.step(-1, index);\n      }\n      this.allowAutoplay = false;\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n    },\n    onIndicatorClick: function onIndicatorClick(e, index) {\n      var page = this.d_page;\n      if (index > page) {\n        this.navForward(e, index);\n      } else if (index < page) {\n        this.navBackward(e, index);\n      }\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      if (this.$refs.itemsContainer) {\n        !this.isUnstyled && addClass(this.$refs.itemsContainer, 'p-items-hidden');\n        this.$refs.itemsContainer.style.transition = '';\n        if ((this.d_page === 0 || this.d_page === this.totalIndicators - 1) && this.isCircular()) {\n          this.$refs.itemsContainer.style.transform = this.isVertical() ? \"translate3d(0, \".concat(this.totalShiftedItems * (100 / this.d_numVisible), \"%, 0)\") : \"translate3d(\".concat(this.totalShiftedItems * (100 / this.d_numVisible), \"%, 0, 0)\");\n        }\n      }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var touchobj = e.changedTouches[0];\n      this.startPos = {\n        x: touchobj.pageX,\n        y: touchobj.pageY\n      };\n    },\n    onTouchMove: function onTouchMove(e) {\n      var touchobj = e.changedTouches[0];\n      var diff = this.isVertical() ? touchobj.pageY - this.startPos.y : touchobj.pageX - this.startPos.x;\n      if (Math.abs(diff) > this.swipeThreshold && e.cancelable) {\n        e.preventDefault();\n      }\n    },\n    onTouchEnd: function onTouchEnd(e) {\n      var touchobj = e.changedTouches[0];\n      if (this.isVertical()) {\n        this.changePageOnTouch(e, touchobj.pageY - this.startPos.y);\n      } else {\n        this.changePageOnTouch(e, touchobj.pageX - this.startPos.x);\n      }\n    },\n    changePageOnTouch: function changePageOnTouch(e, diff) {\n      if (Math.abs(diff) > this.swipeThreshold) {\n        if (diff < 0) {\n          // left\n          this.navForward(e);\n        } else {\n          // right\n          this.navBackward(e);\n        }\n      }\n    },\n    onIndicatorKeydown: function onIndicatorKeydown(event) {\n      switch (event.code) {\n        case 'ArrowRight':\n          this.onRightKey();\n          break;\n        case 'ArrowLeft':\n          this.onLeftKey();\n          break;\n        case 'Home':\n          this.onHomeKey();\n          event.preventDefault();\n          break;\n        case 'End':\n          this.onEndKey();\n          event.preventDefault();\n          break;\n        case 'ArrowUp':\n        case 'ArrowDown':\n        case 'PageUp':\n        case 'PageDown':\n          event.preventDefault();\n          break;\n        case 'Tab':\n          this.onTabKey();\n          break;\n      }\n    },\n    onRightKey: function onRightKey() {\n      var indicators = _toConsumableArray(find(this.$refs.indicatorContent, '[data-pc-section=\"indicator\"]'));\n      var activeIndex = this.findFocusedIndicatorIndex();\n      this.changedFocusedIndicator(activeIndex, activeIndex + 1 === indicators.length ? indicators.length - 1 : activeIndex + 1);\n    },\n    onLeftKey: function onLeftKey() {\n      var activeIndex = this.findFocusedIndicatorIndex();\n      this.changedFocusedIndicator(activeIndex, activeIndex - 1 <= 0 ? 0 : activeIndex - 1);\n    },\n    onHomeKey: function onHomeKey() {\n      var activeIndex = this.findFocusedIndicatorIndex();\n      this.changedFocusedIndicator(activeIndex, 0);\n    },\n    onEndKey: function onEndKey() {\n      var indicators = _toConsumableArray(find(this.$refs.indicatorContent, '[data-pc-section=\"indicator\"]'));\n      var activeIndex = this.findFocusedIndicatorIndex();\n      this.changedFocusedIndicator(activeIndex, indicators.length - 1);\n    },\n    onTabKey: function onTabKey() {\n      var indicators = _toConsumableArray(find(this.$refs.indicatorContent, '[data-pc-section=\"indicator\"]'));\n      var highlightedIndex = indicators.findIndex(function (ind) {\n        return getAttribute(ind, 'data-p-active') === true;\n      });\n      var activeIndicator = findSingle(this.$refs.indicatorContent, '[data-pc-section=\"indicator\"] > button[tabindex=\"0\"]');\n      var activeIndex = indicators.findIndex(function (ind) {\n        return ind === activeIndicator.parentElement;\n      });\n      indicators[activeIndex].children[0].tabIndex = '-1';\n      indicators[highlightedIndex].children[0].tabIndex = '0';\n    },\n    findFocusedIndicatorIndex: function findFocusedIndicatorIndex() {\n      var indicators = _toConsumableArray(find(this.$refs.indicatorContent, '[data-pc-section=\"indicator\"]'));\n      var activeIndicator = findSingle(this.$refs.indicatorContent, '[data-pc-section=\"indicator\"] > button[tabindex=\"0\"]');\n      return indicators.findIndex(function (ind) {\n        return ind === activeIndicator.parentElement;\n      });\n    },\n    changedFocusedIndicator: function changedFocusedIndicator(prevInd, nextInd) {\n      var indicators = _toConsumableArray(find(this.$refs.indicatorContent, '[data-pc-section=\"indicator\"]'));\n      indicators[prevInd].children[0].tabIndex = '-1';\n      indicators[nextInd].children[0].tabIndex = '0';\n      indicators[nextInd].children[0].focus();\n    },\n    bindDocumentListeners: function bindDocumentListeners() {\n      var _this = this;\n      if (!this.documentResizeListener) {\n        this.documentResizeListener = function (e) {\n          _this.calculatePosition(e);\n        };\n        window.addEventListener('resize', this.documentResizeListener);\n      }\n    },\n    unbindDocumentListeners: function unbindDocumentListeners() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    },\n    startAutoplay: function startAutoplay() {\n      var _this2 = this;\n      this.interval = setInterval(function () {\n        if (_this2.d_page === _this2.totalIndicators - 1) {\n          _this2.step(-1, 0);\n        } else {\n          _this2.step(-1, _this2.d_page + 1);\n        }\n      }, this.autoplayInterval);\n    },\n    stopAutoplay: function stopAutoplay() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    },\n    createStyle: function createStyle() {\n      if (!this.carouselStyle) {\n        var _this$$primevue;\n        this.carouselStyle = document.createElement('style');\n        this.carouselStyle.type = 'text/css';\n        setAttribute(this.carouselStyle, 'nonce', (_this$$primevue = this.$primevue) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.config) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.csp) === null || _this$$primevue === void 0 ? void 0 : _this$$primevue.nonce);\n        document.body.appendChild(this.carouselStyle);\n      }\n      var innerHTML = \"\\n                .p-carousel[\".concat(this.$attrSelector, \"] .p-carousel-item {\\n                    flex: 1 0 \").concat(100 / this.d_numVisible, \"%\\n                }\\n            \");\n      if (this.responsiveOptions && !this.isUnstyled) {\n        var _responsiveOptions = _toConsumableArray(this.responsiveOptions);\n        var comparer = localeComparator();\n        _responsiveOptions.sort(function (data1, data2) {\n          var value1 = data1.breakpoint;\n          var value2 = data2.breakpoint;\n          return sort(value1, value2, -1, comparer);\n        });\n        for (var i = 0; i < _responsiveOptions.length; i++) {\n          var res = _responsiveOptions[i];\n          innerHTML += \"\\n                        @media screen and (max-width: \".concat(res.breakpoint, \") {\\n                            .p-carousel[\").concat(this.$attrSelector, \"] .p-carousel-item {\\n                                flex: 1 0 \").concat(100 / res.numVisible, \"%\\n                            }\\n                        }\\n                    \");\n        }\n      }\n      this.carouselStyle.innerHTML = innerHTML;\n    },\n    isVertical: function isVertical() {\n      return this.orientation === 'vertical';\n    },\n    hasValidItemCount: function hasValidItemCount() {\n      return this.value && this.value.length > this.d_numVisible;\n    },\n    isCircular: function isCircular() {\n      return this.hasValidItemCount() && this.d_circular;\n    },\n    isAutoplay: function isAutoplay() {\n      return this.hasValidItemCount() && this.autoplayInterval && this.allowAutoplay;\n    },\n    firstIndex: function firstIndex() {\n      return this.isCircular() ? -1 * (this.totalShiftedItems + this.d_numVisible) : this.totalShiftedItems * -1;\n    },\n    lastIndex: function lastIndex() {\n      return this.firstIndex() + this.d_numVisible - 1;\n    },\n    ariaSlideNumber: function ariaSlideNumber(value) {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.slideNumber.replace(/{slideNumber}/g, value) : undefined;\n    },\n    ariaPageLabel: function ariaPageLabel(value) {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.pageLabel.replace(/{page}/g, value) : undefined;\n    }\n  },\n  computed: {\n    totalIndicators: function totalIndicators() {\n      return this.value ? Math.max(Math.ceil((this.value.length - this.d_numVisible) / this.d_numScroll) + 1, 0) : 0;\n    },\n    backwardIsDisabled: function backwardIsDisabled() {\n      return this.value && (!this.circular || this.value.length < this.d_numVisible) && this.d_page === 0;\n    },\n    forwardIsDisabled: function forwardIsDisabled() {\n      return this.value && (!this.circular || this.value.length < this.d_numVisible) && (this.d_page === this.totalIndicators - 1 || this.totalIndicators === 0);\n    },\n    ariaSlideLabel: function ariaSlideLabel() {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.slide : undefined;\n    },\n    ariaPrevButtonLabel: function ariaPrevButtonLabel() {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.prevPageLabel : undefined;\n    },\n    ariaNextButtonLabel: function ariaNextButtonLabel() {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.nextPageLabel : undefined;\n    },\n    empty: function empty() {\n      return !this.value || this.value.length === 0;\n    },\n    emptyMessageText: function emptyMessageText() {\n      var _this$$primevue$confi;\n      return ((_this$$primevue$confi = this.$primevue.config) === null || _this$$primevue$confi === void 0 || (_this$$primevue$confi = _this$$primevue$confi.locale) === null || _this$$primevue$confi === void 0 ? void 0 : _this$$primevue$confi.emptyMessage) || '';\n    }\n  },\n  components: {\n    Button: Button,\n    ChevronRightIcon: ChevronRightIcon,\n    ChevronDownIcon: ChevronDownIcon,\n    ChevronLeftIcon: ChevronLeftIcon,\n    ChevronUpIcon: ChevronUpIcon\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\n\nvar _hoisted_1 = [\"aria-live\"];\nvar _hoisted_2 = [\"data-p-carousel-item-active\", \"data-p-carousel-item-start\", \"data-p-carousel-item-end\"];\nvar _hoisted_3 = [\"aria-hidden\", \"aria-label\", \"aria-roledescription\", \"data-p-carousel-item-active\", \"data-p-carousel-item-start\", \"data-p-carousel-item-end\"];\nvar _hoisted_4 = [\"data-p-active\"];\nvar _hoisted_5 = [\"tabindex\", \"aria-label\", \"aria-current\", \"onClick\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Button = resolveComponent(\"Button\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    role: \"region\"\n  }, _ctx.ptmi('root')), [_ctx.$slots.header ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('header')\n  }, _ctx.ptm('header')), [renderSlot(_ctx.$slots, \"header\")], 16)) : createCommentVNode(\"\", true), !$options.empty ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 1,\n    \"class\": [_ctx.cx('contentContainer'), _ctx.containerClass]\n  }, _ctx.ptm('contentContainer')), [createElementVNode(\"div\", mergeProps({\n    \"class\": [_ctx.cx('content'), _ctx.contentClass],\n    \"aria-live\": $data.allowAutoplay ? 'polite' : 'off'\n  }, _ctx.ptm('content')), [_ctx.showNavigators ? (openBlock(), createBlock(_component_Button, mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('pcPrevButton'),\n    disabled: $options.backwardIsDisabled,\n    \"aria-label\": $options.ariaPrevButtonLabel,\n    unstyled: _ctx.unstyled,\n    onClick: $options.navBackward\n  }, _ctx.prevButtonProps, {\n    pt: _ctx.ptm('pcPrevButton'),\n    \"data-pc-group-section\": \"navigator\"\n  }), {\n    icon: withCtx(function (slotProps) {\n      return [renderSlot(_ctx.$slots, \"previcon\", {}, function () {\n        return [(openBlock(), createBlock(resolveDynamicComponent($options.isVertical() ? 'ChevronUpIcon' : 'ChevronLeftIcon'), mergeProps({\n          \"class\": slotProps.icon\n        }, _ctx.ptm('pcPrevButton')['icon']), null, 16, [\"class\"]))];\n      })];\n    }),\n    _: 3\n  }, 16, [\"class\", \"disabled\", \"aria-label\", \"unstyled\", \"onClick\", \"pt\"])) : createCommentVNode(\"\", true), createElementVNode(\"div\", mergeProps({\n    \"class\": _ctx.cx('viewport'),\n    style: [{\n      height: $options.isVertical() ? _ctx.verticalViewPortHeight : 'auto'\n    }],\n    onTouchend: _cache[1] || (_cache[1] = function () {\n      return $options.onTouchEnd && $options.onTouchEnd.apply($options, arguments);\n    }),\n    onTouchstart: _cache[2] || (_cache[2] = function () {\n      return $options.onTouchStart && $options.onTouchStart.apply($options, arguments);\n    }),\n    onTouchmove: _cache[3] || (_cache[3] = function () {\n      return $options.onTouchMove && $options.onTouchMove.apply($options, arguments);\n    })\n  }, _ctx.ptm('viewport')), [createElementVNode(\"div\", mergeProps({\n    ref: \"itemsContainer\",\n    \"class\": _ctx.cx('itemList'),\n    onTransitionend: _cache[0] || (_cache[0] = function () {\n      return $options.onTransitionEnd && $options.onTransitionEnd.apply($options, arguments);\n    })\n  }, _ctx.ptm('itemList')), [$options.isCircular() ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList(_ctx.value.slice(-1 * $data.d_numVisible), function (item, index) {\n    return openBlock(), createElementBlock(\"div\", mergeProps({\n      key: index + '_scloned',\n      \"class\": _ctx.cx('itemClone', {\n        index: index,\n        value: _ctx.value,\n        totalShiftedItems: $data.totalShiftedItems,\n        d_numVisible: $data.d_numVisible\n      }),\n      ref_for: true\n    }, _ctx.ptm('itemClone'), {\n      \"data-p-carousel-item-active\": $data.totalShiftedItems * -1 === _ctx.value.length + $data.d_numVisible,\n      \"data-p-carousel-item-start\": index === 0,\n      \"data-p-carousel-item-end\": _ctx.value.slice(-1 * $data.d_numVisible).length - 1 === index\n    }), [renderSlot(_ctx.$slots, \"item\", {\n      data: item,\n      index: index\n    })], 16, _hoisted_2);\n  }), 128)) : createCommentVNode(\"\", true), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.value, function (item, index) {\n    return openBlock(), createElementBlock(\"div\", mergeProps({\n      key: index,\n      \"class\": _ctx.cx('item', {\n        index: index\n      }),\n      role: \"group\",\n      \"aria-hidden\": $options.firstIndex() > index || $options.lastIndex() < index ? true : undefined,\n      \"aria-label\": $options.ariaSlideNumber(index),\n      \"aria-roledescription\": $options.ariaSlideLabel,\n      ref_for: true\n    }, $options.getItemPTOptions('item', index), {\n      \"data-p-carousel-item-active\": $options.firstIndex() <= index && $options.lastIndex() >= index,\n      \"data-p-carousel-item-start\": $options.firstIndex() === index,\n      \"data-p-carousel-item-end\": $options.lastIndex() === index\n    }), [renderSlot(_ctx.$slots, \"item\", {\n      data: item,\n      index: index\n    })], 16, _hoisted_3);\n  }), 128)), $options.isCircular() ? (openBlock(true), createElementBlock(Fragment, {\n    key: 1\n  }, renderList(_ctx.value.slice(0, $data.d_numVisible), function (item, index) {\n    return openBlock(), createElementBlock(\"div\", mergeProps({\n      key: index + '_fcloned',\n      \"class\": _ctx.cx('itemClone', {\n        index: index,\n        value: _ctx.value,\n        totalShiftedItems: $data.totalShiftedItems,\n        d_numVisible: $data.d_numVisible\n      }),\n      ref_for: true\n    }, _ctx.ptm('itemClone')), [renderSlot(_ctx.$slots, \"item\", {\n      data: item,\n      index: index\n    })], 16);\n  }), 128)) : createCommentVNode(\"\", true)], 16)], 16), _ctx.showNavigators ? (openBlock(), createBlock(_component_Button, mergeProps({\n    key: 1,\n    \"class\": _ctx.cx('pcNextButton'),\n    disabled: $options.forwardIsDisabled,\n    \"aria-label\": $options.ariaNextButtonLabel,\n    unstyled: _ctx.unstyled,\n    onClick: $options.navForward\n  }, _ctx.nextButtonProps, {\n    pt: _ctx.ptm('pcNextButton'),\n    \"data-pc-group-section\": \"navigator\"\n  }), {\n    icon: withCtx(function (slotProps) {\n      return [renderSlot(_ctx.$slots, \"nexticon\", {}, function () {\n        return [(openBlock(), createBlock(resolveDynamicComponent($options.isVertical() ? 'ChevronDownIcon' : 'ChevronRightIcon'), mergeProps({\n          \"class\": slotProps[\"class\"]\n        }, _ctx.ptm('pcNextButton')['icon']), null, 16, [\"class\"]))];\n      })];\n    }),\n    _: 3\n  }, 16, [\"class\", \"disabled\", \"aria-label\", \"unstyled\", \"onClick\", \"pt\"])) : createCommentVNode(\"\", true)], 16, _hoisted_1), $options.totalIndicators >= 0 && _ctx.showIndicators ? (openBlock(), createElementBlock(\"ul\", mergeProps({\n    key: 0,\n    ref: \"indicatorContent\",\n    \"class\": [_ctx.cx('indicatorList'), _ctx.indicatorsContentClass],\n    onKeydown: _cache[4] || (_cache[4] = function () {\n      return $options.onIndicatorKeydown && $options.onIndicatorKeydown.apply($options, arguments);\n    })\n  }, _ctx.ptm('indicatorList')), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.totalIndicators, function (indicator, i) {\n    return openBlock(), createElementBlock(\"li\", mergeProps({\n      key: 'p-carousel-indicator-' + i.toString(),\n      \"class\": _ctx.cx('indicator', {\n        index: i\n      }),\n      ref_for: true\n    }, $options.getIndicatorPTOptions('indicator', i), {\n      \"data-p-active\": $data.d_page === i\n    }), [createElementVNode(\"button\", mergeProps({\n      \"class\": _ctx.cx('indicatorButton'),\n      type: \"button\",\n      tabindex: $data.d_page === i ? '0' : '-1',\n      \"aria-label\": $options.ariaPageLabel(i + 1),\n      \"aria-current\": $data.d_page === i ? 'page' : undefined,\n      onClick: function onClick($event) {\n        return $options.onIndicatorClick($event, i);\n      },\n      ref_for: true\n    }, $options.getIndicatorPTOptions('indicatorButton', i)), null, 16, _hoisted_5)], 16, _hoisted_4);\n  }), 128))], 16)) : createCommentVNode(\"\", true)], 16)) : renderSlot(_ctx.$slots, \"empty\", {\n    key: 2\n  }, function () {\n    return [createTextVNode(toDisplayString($options.emptyMessageText), 1)];\n  }), _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 3,\n    \"class\": _ctx.cx('footer')\n  }, _ctx.ptm('footer')), [renderSlot(_ctx.$slots, \"footer\")], 16)) : createCommentVNode(\"\", true)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"version":3}