{"file":"index.mjs","mappings":";AACA,MAAe,cAAA,qBAAqB,MAAM,OAAO,cAAgF,EAAE,KAAK,OAAK,EAAE,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;","names":[],"sources":["../../../../../../node_modules/primevue/inplace/index.mjs?nuxt_component=async&nuxt_component_name=Inplace&nuxt_component_export=default"],"sourcesContent":["import BaseComponent from '@primevue/core/basecomponent';\nimport InplaceStyle from 'primevue/inplace/style';\nimport { createElementBlock, openBlock, mergeProps, withKeys, renderSlot } from 'vue';\n\nvar script$1 = {\n  name: 'BaseInplace',\n  \"extends\": BaseComponent,\n  props: {\n    active: {\n      type: Boolean,\n      \"default\": false\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    displayProps: {\n      type: null,\n      \"default\": null\n    }\n  },\n  style: InplaceStyle,\n  provide: function provide() {\n    return {\n      $pcInplace: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Inplace',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['open', 'close', 'update:active'],\n  data: function data() {\n    return {\n      d_active: this.active\n    };\n  },\n  watch: {\n    active: function active(newValue) {\n      this.d_active = newValue;\n    }\n  },\n  methods: {\n    open: function open(event) {\n      if (this.disabled) {\n        return;\n      }\n      this.d_active = true;\n      this.$emit('open', event);\n      this.$emit('update:active', true);\n    },\n    close: function close(event) {\n      var _this = this;\n      this.d_active = false;\n      this.$emit('close', event);\n      this.$emit('update:active', false);\n      setTimeout(function () {\n        _this.$refs.display.focus();\n      }, 0);\n    }\n  }\n};\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), true).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: true, configurable: true, writable: true }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar _hoisted_1 = [\"tabindex\", \"data-p-disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    \"aria-live\": \"polite\"\n  }, _ctx.ptmi('root')), [!$data.d_active ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    ref: \"display\",\n    \"class\": _ctx.cx('display'),\n    tabindex: _ctx.$attrs.tabindex || '0',\n    role: \"button\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.open && $options.open.apply($options, arguments);\n    }),\n    onKeydown: _cache[1] || (_cache[1] = withKeys(function () {\n      return $options.open && $options.open.apply($options, arguments);\n    }, [\"enter\"])),\n    \"data-p-disabled\": _ctx.disabled\n  }, _objectSpread(_objectSpread({}, _ctx.displayProps), _ctx.ptm('display'))), [renderSlot(_ctx.$slots, \"display\")], 16, _hoisted_1)) : (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 1,\n    \"class\": _ctx.cx('content')\n  }, _ctx.ptm('content')), [renderSlot(_ctx.$slots, \"content\", {\n    closeCallback: $options.close\n  })], 16))], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"version":3}