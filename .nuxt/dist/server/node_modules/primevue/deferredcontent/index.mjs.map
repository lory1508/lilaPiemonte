{"version":3,"file":"index.mjs","sources":["../../../../../../node_modules/primevue/deferredcontent/index.mjs?nuxt_component=async&nuxt_component_name=DeferredContent&nuxt_component_export=default"],"sourcesContent":["import BaseComponent from '@primevue/core/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\nimport { createElementBlock, openBlock, mergeProps, renderSlot, createCommentVNode } from 'vue';\n\nvar script = {\n  name: 'DeferredContent',\n  \"extends\": BaseComponent,\n  inheritAttrs: false,\n  emits: ['load'],\n  style: DeferredContentStyle,\n  data: function data() {\n    return {\n      loaded: false\n    };\n  },\n  mounted: function mounted() {\n    if (!this.loaded) {\n      if (this.shouldLoad()) this.load();else this.bindScrollListener();\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindScrollListener();\n  },\n  methods: {\n    bindScrollListener: function bindScrollListener() {\n      var _this = this;\n      this.documentScrollListener = function () {\n        if (_this.shouldLoad()) {\n          _this.load();\n          _this.unbindScrollListener();\n        }\n      };\n      window.addEventListener('scroll', this.documentScrollListener);\n    },\n    unbindScrollListener: function unbindScrollListener() {\n      if (this.documentScrollListener) {\n        window.removeEventListener('scroll', this.documentScrollListener);\n        this.documentScrollListener = null;\n      }\n    },\n    shouldLoad: function shouldLoad() {\n      if (this.loaded) {\n        return false;\n      } else {\n        var rect = this.$refs.container.getBoundingClientRect();\n        var docElement = document.documentElement;\n        var winHeight = docElement.clientHeight;\n        return winHeight >= rect.top;\n      }\n    },\n    load: function load(event) {\n      this.loaded = true;\n      this.$emit('load', event);\n    }\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    ref: \"container\"\n  }, _ctx.ptmi('root')), [$data.loaded ? renderSlot(_ctx.$slots, \"default\", {\n    key: 0\n  }) : createCommentVNode(\"\", true)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"names":[],"mappings":";AACA,MAAiC,sBAAA,qBAAA,MAAA,OAAA,cAAA,EAAA,KAAA,OAAA,EAAA,SAAA,KAAA,EAAA,WAAA,CAAA,CAAA;","x_google_ignoreList":[0]}