{"file":"index.mjs","mappings":";AACA,MAAe,oBAAA,qBAAqB,MAAM,OAAO,cAAsF,EAAE,KAAK,OAAK,EAAE,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;","names":[],"sources":["../../../../../../node_modules/primevue/inlinemessage/index.mjs?nuxt_component=async&nuxt_component_name=InlineMessage&nuxt_component_export=default"],"sourcesContent":["import CheckIcon from '@primevue/icons/check';\nimport ExclamationTriangleIcon from '@primevue/icons/exclamationtriangle';\nimport InfoCircleIcon from '@primevue/icons/infocircle';\nimport TimesCircleIcon from '@primevue/icons/timescircle';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport InlineMessageStyle from 'primevue/inlinemessage/style';\nimport { createElementBlock, openBlock, mergeProps, renderSlot, createCommentVNode, createBlock, resolveDynamicComponent } from 'vue';\n\nvar script$1 = {\n  name: 'BaseInlineMessage',\n  \"extends\": BaseComponent,\n  props: {\n    severity: {\n      type: String,\n      \"default\": 'error'\n    },\n    icon: {\n      type: String,\n      \"default\": undefined\n    }\n  },\n  style: InlineMessageStyle,\n  provide: function provide() {\n    return {\n      $pcInlineMessage: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'InlineMessage',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  timeout: null,\n  data: function data() {\n    return {\n      visible: true\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    if (!this.sticky) {\n      setTimeout(function () {\n        _this.visible = false;\n      }, this.life);\n    }\n  },\n  computed: {\n    iconComponent: function iconComponent() {\n      return {\n        info: InfoCircleIcon,\n        success: CheckIcon,\n        warn: ExclamationTriangleIcon,\n        error: TimesCircleIcon\n      }[this.severity];\n    }\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon ? 'span' : $options.iconComponent), mergeProps({\n      \"class\": _ctx.cx('icon')\n    }, _ctx.ptm('icon')), null, 16, [\"class\"]))];\n  }), _ctx.$slots[\"default\"] ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('text')\n  }, _ctx.ptm('text')), [renderSlot(_ctx.$slots, \"default\")], 16)) : createCommentVNode(\"\", true)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"version":3}