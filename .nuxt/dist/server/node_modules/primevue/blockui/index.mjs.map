{"version":3,"file":"index.mjs","sources":["../../../../../../node_modules/primevue/blockui/index.mjs?nuxt_component=async&nuxt_component_name=BlockUI&nuxt_component_export=default"],"sourcesContent":["import { addClass, hasCSSAnimation, createElement } from '@primeuix/utils/dom';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { unblockBodyScroll, blockBodyScroll } from 'primevue/utils';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport BlockUIStyle from 'primevue/blockui/style';\nimport { createElementBlock, openBlock, mergeProps, renderSlot } from 'vue';\n\nvar script$1 = {\n  name: 'BaseBlockUI',\n  \"extends\": BaseComponent,\n  props: {\n    blocked: {\n      type: Boolean,\n      \"default\": false\n    },\n    fullScreen: {\n      type: Boolean,\n      \"default\": false\n    },\n    baseZIndex: {\n      type: Number,\n      \"default\": 0\n    },\n    autoZIndex: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  style: BlockUIStyle,\n  provide: function provide() {\n    return {\n      $pcBlockUI: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'BlockUI',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['block', 'unblock'],\n  mask: null,\n  data: function data() {\n    return {\n      isBlocked: false\n    };\n  },\n  watch: {\n    blocked: function blocked(newValue) {\n      if (newValue === true) this.block();else this.unblock();\n    }\n  },\n  mounted: function mounted() {\n    if (this.blocked) {\n      this.block();\n    }\n  },\n  methods: {\n    block: function block() {\n      var styleClass = 'p-blockui-mask p-overlay-mask p-overlay-mask-enter';\n      if (this.fullScreen) {\n        styleClass += ' p-blockui-mask-document';\n        this.mask = createElement('div', {\n          style: {\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%'\n          },\n          \"class\": !this.isUnstyled && styleClass,\n          'p-bind': this.ptm('mask')\n        });\n        document.body.appendChild(this.mask);\n        blockBodyScroll();\n        document.activeElement.blur();\n      } else {\n        this.mask = createElement('div', {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%'\n          },\n          \"class\": !this.isUnstyled && styleClass,\n          'p-bind': this.ptm('mask')\n        });\n        this.$refs.container.appendChild(this.mask);\n      }\n      if (this.autoZIndex) {\n        ZIndex.set('modal', this.mask, this.baseZIndex + this.$primevue.config.zIndex.modal);\n      }\n      this.isBlocked = true;\n      this.$emit('block');\n    },\n    unblock: function unblock() {\n      var _this = this;\n      if (this.mask) {\n        !this.isUnstyled && addClass(this.mask, 'p-overlay-mask-leave');\n        var _handleAnimationEnd = function handleAnimationEnd() {\n          clearTimeout(fallbackTimer);\n          _this.mask.removeEventListener('animationend', _handleAnimationEnd);\n          _this.mask.removeEventListener('webkitAnimationEnd', _handleAnimationEnd);\n        };\n        var fallbackTimer = setTimeout(function () {\n          _this.removeMask();\n        }, 10);\n        if (hasCSSAnimation(this.mask) > 0) {\n          this.mask.addEventListener('animationend', _handleAnimationEnd);\n          this.mask.addEventListener('webkitAnimationEnd', _handleAnimationEnd);\n        }\n      } else {\n        this.removeMask();\n      }\n    },\n    removeMask: function removeMask() {\n      ZIndex.clear(this.mask);\n      if (this.fullScreen) {\n        document.body.removeChild(this.mask);\n        unblockBodyScroll();\n      } else {\n        var _this$$refs$container;\n        (_this$$refs$container = this.$refs.container) === null || _this$$refs$container === void 0 || _this$$refs$container.removeChild(this.mask);\n      }\n      this.isBlocked = false;\n      this.$emit('unblock');\n    }\n  }\n};\n\nvar _hoisted_1 = [\"aria-busy\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    ref: \"container\",\n    \"class\": _ctx.cx('root'),\n    \"aria-busy\": $data.isBlocked\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"default\")], 16, _hoisted_1);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"names":[],"mappings":";AACA,MAAuB,cAAA,qBAAA,MAAA,OAAA,cAAA,EAAA,KAAA,OAAA,EAAA,SAAA,KAAA,EAAA,WAAA,CAAA,CAAA;","x_google_ignoreList":[0]}