{"version":3,"file":"index.mjs","sources":["../../../../../../node_modules/primevue/breadcrumb/index.mjs?nuxt_component=async&nuxt_component_name=Breadcrumb&nuxt_component_export=default"],"sourcesContent":["import ChevronRightIcon from '@primevue/icons/chevronright';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport BreadcrumbStyle from 'primevue/breadcrumb/style';\nimport { mergeProps, createElementBlock, createCommentVNode, openBlock, createBlock, resolveDynamicComponent, normalizeClass, toDisplayString, resolveComponent, createElementVNode, Fragment, renderList, createVNode, renderSlot } from 'vue';\n\nvar script$2 = {\n  name: 'BaseBreadcrumb',\n  \"extends\": BaseComponent,\n  props: {\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    home: {\n      type: null,\n      \"default\": null\n    }\n  },\n  style: BreadcrumbStyle,\n  provide: function provide() {\n    return {\n      $pcBreadcrumb: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script$1 = {\n  name: 'BreadcrumbItem',\n  hostName: 'Breadcrumb',\n  \"extends\": BaseComponent,\n  props: {\n    item: null,\n    templates: null,\n    index: null\n  },\n  methods: {\n    onClick: function onClick(event) {\n      if (this.item.command) {\n        this.item.command({\n          originalEvent: event,\n          item: this.item\n        });\n      }\n    },\n    visible: function visible() {\n      return typeof this.item.visible === 'function' ? this.item.visible() : this.item.visible !== false;\n    },\n    disabled: function disabled() {\n      return typeof this.item.disabled === 'function' ? this.item.disabled() : this.item.disabled;\n    },\n    label: function label() {\n      return typeof this.item.label === 'function' ? this.item.label() : this.item.label;\n    },\n    isCurrentUrl: function isCurrentUrl() {\n      var _this$item = this.item,\n        to = _this$item.to,\n        url = _this$item.url;\n      var lastPath = typeof window !== 'undefined' ? window.location.pathname : '';\n      return to === lastPath || url === lastPath ? 'page' : undefined;\n    }\n  },\n  computed: {\n    ptmOptions: function ptmOptions() {\n      return {\n        context: {\n          item: this.item,\n          index: this.index\n        }\n      };\n    },\n    getMenuItemProps: function getMenuItemProps() {\n      var _this = this;\n      return {\n        action: mergeProps({\n          \"class\": this.cx('itemLink'),\n          'aria-current': this.isCurrentUrl(),\n          onClick: function onClick($event) {\n            return _this.onClick($event);\n          }\n        }, this.ptm('itemLink', this.ptmOptions)),\n        icon: mergeProps({\n          \"class\": [this.cx('icon'), this.item.icon]\n        }, this.ptm('icon', this.ptmOptions)),\n        label: mergeProps({\n          \"class\": this.cx('label')\n        }, this.ptm('label', this.ptmOptions))\n      };\n    }\n  }\n};\n\nvar _hoisted_1 = [\"href\", \"target\", \"aria-current\"];\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  return $options.visible() ? (openBlock(), createElementBlock(\"li\", mergeProps({\n    key: 0,\n    \"class\": [_ctx.cx('item'), $props.item[\"class\"]]\n  }, _ctx.ptm('item', $options.ptmOptions)), [!$props.templates.item ? (openBlock(), createElementBlock(\"a\", mergeProps({\n    key: 0,\n    href: $props.item.url || '#',\n    \"class\": _ctx.cx('itemLink'),\n    target: $props.item.target,\n    \"aria-current\": $options.isCurrentUrl(),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.onClick && $options.onClick.apply($options, arguments);\n    })\n  }, _ctx.ptm('itemLink', $options.ptmOptions)), [$props.templates && $props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {\n    key: 0,\n    item: $props.item,\n    \"class\": normalizeClass(_ctx.cx('itemIcon', $options.ptmOptions))\n  }, null, 8, [\"item\", \"class\"])) : $props.item.icon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n    key: 1,\n    \"class\": [_ctx.cx('itemIcon'), $props.item.icon]\n  }, _ctx.ptm('itemIcon', $options.ptmOptions)), null, 16)) : createCommentVNode(\"\", true), $props.item.label ? (openBlock(), createElementBlock(\"span\", mergeProps({\n    key: 2,\n    \"class\": _ctx.cx('itemLabel')\n  }, _ctx.ptm('itemLabel', $options.ptmOptions)), toDisplayString($options.label()), 17)) : createCommentVNode(\"\", true)], 16, _hoisted_1)) : (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {\n    key: 1,\n    item: $props.item,\n    label: $options.label(),\n    props: $options.getMenuItemProps\n  }, null, 8, [\"item\", \"label\", \"props\"]))], 16)) : createCommentVNode(\"\", true);\n}\n\nscript$1.render = render$1;\n\nvar script = {\n  name: 'Breadcrumb',\n  \"extends\": script$2,\n  inheritAttrs: false,\n  components: {\n    BreadcrumbItem: script$1,\n    ChevronRightIcon: ChevronRightIcon\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_BreadcrumbItem = resolveComponent(\"BreadcrumbItem\");\n  var _component_ChevronRightIcon = resolveComponent(\"ChevronRightIcon\");\n  return openBlock(), createElementBlock(\"nav\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [createElementVNode(\"ol\", mergeProps({\n    \"class\": _ctx.cx('list')\n  }, _ctx.ptm('list')), [_ctx.home ? (openBlock(), createBlock(_component_BreadcrumbItem, mergeProps({\n    key: 0,\n    item: _ctx.home,\n    \"class\": _ctx.cx('homeItem'),\n    templates: _ctx.$slots,\n    pt: _ctx.pt,\n    unstyled: _ctx.unstyled\n  }, _ctx.ptm('homeItem')), null, 16, [\"item\", \"class\", \"templates\", \"pt\", \"unstyled\"])) : createCommentVNode(\"\", true), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function (item, i) {\n    return openBlock(), createElementBlock(Fragment, {\n      key: item.label + '_' + i\n    }, [_ctx.home || i !== 0 ? (openBlock(), createElementBlock(\"li\", mergeProps({\n      key: 0,\n      \"class\": _ctx.cx('separator'),\n      ref_for: true\n    }, _ctx.ptm('separator')), [renderSlot(_ctx.$slots, \"separator\", {}, function () {\n      return [createVNode(_component_ChevronRightIcon, mergeProps({\n        \"aria-hidden\": \"true\",\n        \"class\": _ctx.cx('separatorIcon'),\n        ref_for: true\n      }, _ctx.ptm('separatorIcon')), null, 16, [\"class\"])];\n    })], 16)) : createCommentVNode(\"\", true), createVNode(_component_BreadcrumbItem, {\n      item: item,\n      index: i,\n      templates: _ctx.$slots,\n      pt: _ctx.pt,\n      unstyled: _ctx.unstyled\n    }, null, 8, [\"item\", \"index\", \"templates\", \"pt\", \"unstyled\"])], 64);\n  }), 128))], 16)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"names":[],"mappings":";AACA,MAA0B,iBAAA,qBAAA,MAAA,OAAA,cAAA,EAAA,KAAA,OAAA,EAAA,SAAA,KAAA,EAAA,WAAA,CAAA,CAAA;","x_google_ignoreList":[0]}