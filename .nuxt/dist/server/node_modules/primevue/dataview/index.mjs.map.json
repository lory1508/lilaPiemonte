{"file":"index.mjs","mappings":";AACA,MAAe,eAAA,qBAAqB,MAAM,OAAO,cAAiF,EAAE,KAAK,OAAK,EAAE,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;","names":[],"sources":["../../../../../../node_modules/primevue/dataview/index.mjs?nuxt_component=async&nuxt_component_name=DataView&nuxt_component_export=default"],"sourcesContent":["import { localeComparator, resolveFieldData, sort } from '@primeuix/utils/object';\nimport Paginator from 'primevue/paginator';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DataViewStyle from 'primevue/dataview/style';\nimport { resolveComponent, createElementBlock, openBlock, mergeProps, createCommentVNode, createBlock, createElementVNode, renderSlot, normalizeClass, createSlots, withCtx, Fragment, createTextVNode, toDisplayString } from 'vue';\n\nvar script$1 = {\n  name: 'BaseDataView',\n  \"extends\": BaseComponent,\n  props: {\n    value: {\n      type: Array,\n      \"default\": null\n    },\n    layout: {\n      type: String,\n      \"default\": 'list'\n    },\n    rows: {\n      type: Number,\n      \"default\": 0\n    },\n    first: {\n      type: Number,\n      \"default\": 0\n    },\n    totalRecords: {\n      type: Number,\n      \"default\": 0\n    },\n    paginator: {\n      type: Boolean,\n      \"default\": false\n    },\n    paginatorPosition: {\n      type: String,\n      \"default\": 'bottom'\n    },\n    alwaysShowPaginator: {\n      type: Boolean,\n      \"default\": true\n    },\n    paginatorTemplate: {\n      type: String,\n      \"default\": 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'\n    },\n    pageLinkSize: {\n      type: Number,\n      \"default\": 5\n    },\n    rowsPerPageOptions: {\n      type: Array,\n      \"default\": null\n    },\n    currentPageReportTemplate: {\n      type: String,\n      \"default\": '({currentPage} of {totalPages})'\n    },\n    sortField: {\n      type: [String, Function],\n      \"default\": null\n    },\n    sortOrder: {\n      type: Number,\n      \"default\": null\n    },\n    lazy: {\n      type: Boolean,\n      \"default\": false\n    },\n    dataKey: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: DataViewStyle,\n  provide: function provide() {\n    return {\n      $pcDataView: this,\n      $parentInstance: this\n    };\n  }\n};\n\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nvar script = {\n  name: 'DataView',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:first', 'update:rows', 'page'],\n  data: function data() {\n    return {\n      d_first: this.first,\n      d_rows: this.rows\n    };\n  },\n  watch: {\n    first: function first(newValue) {\n      this.d_first = newValue;\n    },\n    rows: function rows(newValue) {\n      this.d_rows = newValue;\n    },\n    sortField: function sortField() {\n      this.resetPage();\n    },\n    sortOrder: function sortOrder() {\n      this.resetPage();\n    }\n  },\n  methods: {\n    getKey: function getKey(item, index) {\n      return this.dataKey ? resolveFieldData(item, this.dataKey) : index;\n    },\n    onPage: function onPage(event) {\n      this.d_first = event.first;\n      this.d_rows = event.rows;\n      this.$emit('update:first', this.d_first);\n      this.$emit('update:rows', this.d_rows);\n      this.$emit('page', event);\n    },\n    sort: function sort$1() {\n      var _this = this;\n      if (this.value) {\n        var value = _toConsumableArray(this.value);\n        var comparer = localeComparator();\n        value.sort(function (data1, data2) {\n          var value1 = resolveFieldData(data1, _this.sortField);\n          var value2 = resolveFieldData(data2, _this.sortField);\n          return sort(value1, value2, _this.sortOrder, comparer);\n        });\n        return value;\n      } else {\n        return null;\n      }\n    },\n    resetPage: function resetPage() {\n      this.d_first = 0;\n      this.$emit('update:first', this.d_first);\n    }\n  },\n  computed: {\n    getTotalRecords: function getTotalRecords() {\n      if (this.totalRecords) return this.totalRecords;else return this.value ? this.value.length : 0;\n    },\n    empty: function empty() {\n      return !this.value || this.value.length === 0;\n    },\n    emptyMessageText: function emptyMessageText() {\n      var _this$$primevue$confi;\n      return ((_this$$primevue$confi = this.$primevue.config) === null || _this$$primevue$confi === void 0 || (_this$$primevue$confi = _this$$primevue$confi.locale) === null || _this$$primevue$confi === void 0 ? void 0 : _this$$primevue$confi.emptyMessage) || '';\n    },\n    paginatorTop: function paginatorTop() {\n      return this.paginator && (this.paginatorPosition !== 'bottom' || this.paginatorPosition === 'both');\n    },\n    paginatorBottom: function paginatorBottom() {\n      return this.paginator && (this.paginatorPosition !== 'top' || this.paginatorPosition === 'both');\n    },\n    items: function items() {\n      if (this.value && this.value.length) {\n        var data = this.value;\n        if (data && data.length && this.sortField) {\n          data = this.sort();\n        }\n        if (this.paginator) {\n          var first = this.lazy ? 0 : this.d_first;\n          return data.slice(first, first + this.d_rows);\n        } else {\n          return data;\n        }\n      } else {\n        return null;\n      }\n    }\n  },\n  components: {\n    DVPaginator: Paginator\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_DVPaginator = resolveComponent(\"DVPaginator\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [_ctx.$slots.header ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('header')\n  }, _ctx.ptm('header')), [renderSlot(_ctx.$slots, \"header\")], 16)) : createCommentVNode(\"\", true), $options.paginatorTop ? (openBlock(), createBlock(_component_DVPaginator, {\n    key: 1,\n    rows: $data.d_rows,\n    first: $data.d_first,\n    totalRecords: $options.getTotalRecords,\n    pageLinkSize: _ctx.pageLinkSize,\n    template: _ctx.paginatorTemplate,\n    rowsPerPageOptions: _ctx.rowsPerPageOptions,\n    currentPageReportTemplate: _ctx.currentPageReportTemplate,\n    \"class\": normalizeClass(_ctx.cx('pcPaginator', {\n      position: 'top'\n    })),\n    alwaysShow: _ctx.alwaysShowPaginator,\n    onPage: _cache[0] || (_cache[0] = function ($event) {\n      return $options.onPage($event);\n    }),\n    unstyled: _ctx.unstyled,\n    pt: _ctx.ptm('pcPaginator')\n  }, createSlots({\n    _: 2\n  }, [_ctx.$slots.paginatorcontainer ? {\n    name: \"container\",\n    fn: withCtx(function (slotProps) {\n      return [renderSlot(_ctx.$slots, \"paginatorcontainer\", {\n        first: slotProps.first,\n        last: slotProps.last,\n        rows: slotProps.rows,\n        page: slotProps.page,\n        pageCount: slotProps.pageCount,\n        pageLinks: slotProps.pageLinks,\n        totalRecords: slotProps.totalRecords,\n        firstPageCallback: slotProps.firstPageCallback,\n        lastPageCallback: slotProps.lastPageCallback,\n        prevPageCallback: slotProps.prevPageCallback,\n        nextPageCallback: slotProps.nextPageCallback,\n        rowChangeCallback: slotProps.rowChangeCallback,\n        changePageCallback: slotProps.changePageCallback\n      })];\n    }),\n    key: \"0\"\n  } : undefined, _ctx.$slots.paginatorstart ? {\n    name: \"start\",\n    fn: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"paginatorstart\")];\n    }),\n    key: \"1\"\n  } : undefined, _ctx.$slots.paginatorend ? {\n    name: \"end\",\n    fn: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"paginatorend\")];\n    }),\n    key: \"2\"\n  } : undefined]), 1032, [\"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"template\", \"rowsPerPageOptions\", \"currentPageReportTemplate\", \"class\", \"alwaysShow\", \"unstyled\", \"pt\"])) : createCommentVNode(\"\", true), createElementVNode(\"div\", mergeProps({\n    \"class\": _ctx.cx('content')\n  }, _ctx.ptm('content')), [!$options.empty ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [_ctx.$slots.list && _ctx.layout === 'list' ? renderSlot(_ctx.$slots, \"list\", {\n    key: 0,\n    items: $options.items\n  }) : createCommentVNode(\"\", true), _ctx.$slots.grid && _ctx.layout === 'grid' ? renderSlot(_ctx.$slots, \"grid\", {\n    key: 1,\n    items: $options.items\n  }) : createCommentVNode(\"\", true)], 64)) : (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 1,\n    \"class\": _ctx.cx('emptyMessage')\n  }, _ctx.ptm('emptyMessage')), [renderSlot(_ctx.$slots, \"empty\", {\n    layout: _ctx.layout\n  }, function () {\n    return [createTextVNode(toDisplayString($options.emptyMessageText), 1)];\n  })], 16))], 16), $options.paginatorBottom ? (openBlock(), createBlock(_component_DVPaginator, {\n    key: 2,\n    rows: $data.d_rows,\n    first: $data.d_first,\n    totalRecords: $options.getTotalRecords,\n    pageLinkSize: _ctx.pageLinkSize,\n    template: _ctx.paginatorTemplate,\n    rowsPerPageOptions: _ctx.rowsPerPageOptions,\n    currentPageReportTemplate: _ctx.currentPageReportTemplate,\n    \"class\": normalizeClass(_ctx.cx('pcPaginator', {\n      position: 'bottom'\n    })),\n    alwaysShow: _ctx.alwaysShowPaginator,\n    onPage: _cache[1] || (_cache[1] = function ($event) {\n      return $options.onPage($event);\n    }),\n    unstyled: _ctx.unstyled,\n    pt: _ctx.ptm('pcPaginator')\n  }, createSlots({\n    _: 2\n  }, [_ctx.$slots.paginatorcontainer ? {\n    name: \"container\",\n    fn: withCtx(function (slotProps) {\n      return [renderSlot(_ctx.$slots, \"paginatorcontainer\", {\n        first: slotProps.first,\n        last: slotProps.last,\n        rows: slotProps.rows,\n        page: slotProps.page,\n        pageCount: slotProps.pageCount,\n        pageLinks: slotProps.pageLinks,\n        totalRecords: slotProps.totalRecords,\n        firstPageCallback: slotProps.firstPageCallback,\n        lastPageCallback: slotProps.lastPageCallback,\n        prevPageCallback: slotProps.prevPageCallback,\n        nextPageCallback: slotProps.nextPageCallback,\n        rowChangeCallback: slotProps.rowChangeCallback,\n        changePageCallback: slotProps.changePageCallback\n      })];\n    }),\n    key: \"0\"\n  } : undefined, _ctx.$slots.paginatorstart ? {\n    name: \"start\",\n    fn: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"paginatorstart\")];\n    }),\n    key: \"1\"\n  } : undefined, _ctx.$slots.paginatorend ? {\n    name: \"end\",\n    fn: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"paginatorend\")];\n    }),\n    key: \"2\"\n  } : undefined]), 1032, [\"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"template\", \"rowsPerPageOptions\", \"currentPageReportTemplate\", \"class\", \"alwaysShow\", \"unstyled\", \"pt\"])) : createCommentVNode(\"\", true), _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 3,\n    \"class\": _ctx.cx('footer')\n  }, _ctx.ptm('footer')), [renderSlot(_ctx.$slots, \"footer\")], 16)) : createCommentVNode(\"\", true)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n"],"version":3}