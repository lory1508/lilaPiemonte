{"version":3,"file":"ServiceCard.vue.mjs","sources":["../../../../components/ServiceCard.vue"],"sourcesContent":["<template>\n  <div\n    class=\"flex flex-col items-center justify-center max-w-lg text-black bg-white border border-black sharp-shadow-lg\"\n  >\n    <span class=\"py-12 text-4xl font-semibold uppercase\" :class=\"`text-${color}`\">{{ title }}</span>\n    <div class=\"flex flex-col items-center justify-center w-full gap-4 p-4 text-white\" :class=\"`bg-${color}`\">\n      <div v-if=\"content\" class=\"flex flex-col gap-4 text-sm\">\n        <div v-for=\"(item, i) in content\" :key=\"`content_${slug}_${i}`\" v-html=\"item\" />\n      </div>\n      <div v-if=\"specialContent\" class=\"flex items-center justify-center text-3xl font-semibold\">\n        {{ specialContent }}\n      </div>\n      <img v-if=\"img\" :src=\"img.url\" :alt=\"img.alt\" width=\"300\" />\n      <ButtonComponent\n        v-if=\"link\"\n        :label=\"link.label\"\n        :color=\"{ text: 'black', bg: 'white', shadow: 'black' }\"\n        class=\"ml-2\"\n        @click=\"goto\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\n  const props = defineProps({\n    title: {\n      type: String,\n      default: '',\n    },\n    content: {\n      type: Array,\n      default: () => [],\n    },\n    link: {\n      type: Object,\n      default: () => {},\n    },\n    img: {\n      type: Object,\n      default: () => {},\n    },\n    color: {\n      type: String,\n      default: 'crimson',\n    },\n    specialContent: {\n      type: String,\n      default: '',\n    },\n  })\n\n  const router = useRouter()\n  const slug = ref('')\n\n  const slugify = (str) => {\n    return str\n      .toLowerCase()\n      .trim()\n      .replace(/[^\\w\\s-]/g, '') // remove non-word, non-space, non-hyphen characters\n      .replace(/[\\s_-]+/g, '-') // replace space, underscore and hyphen characters with a single hyphen\n      .replace(/^-+/, '') // trim leading hyphens\n      .replace(/-+$/, '')\n  }\n\n  const goto = () => {\n    router.push(props.link.href)\n  }\n\n  onMounted(() => {\n    slug.value = slugify(props.title)\n  })\n</script>\n\n<style>\n  ul {\n    list-style: circle !important;\n    margin-left: 2rem !important;\n  }\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBE,UAAM,QAAQ;AA2Bd,UAAM,SAAS,UAAS;AACX,QAAI,EAAE;AAYnB,UAAM,OAAO,MAAM;AACjB,aAAO,KAAK,MAAM,KAAK,IAAI;AAAA,IAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}